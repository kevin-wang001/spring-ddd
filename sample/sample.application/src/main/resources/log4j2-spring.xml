<?xml version="1.0" encoding="UTF-8"?>
<!--设置log4j2的自身log级别为warn-->
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，
    当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration monitorInterval="30" status="warn" >
  <properties>
    <property name="unknown">???</property>
    <property name="server_name">${spring:spring.application.name:-fxadmin}</property>
    <property name="file_pattern_path">${sys:logPath:-/app/deploy/logs/}</property>
    <property name="file_pattern">${file_pattern_path}/${server_name}/${date:yyyy-MM}</property>
    <property name="log_pattern">[%d{MM-dd hh:mm:ss.sss}] [%p] [%t] - %M(%F:%L) - %m%n</property>
    <property name="request_log_pattern">%d{yyyy-MM-dd hh:mm:ss.sss}, %m%n</property>
  </properties>

  <!--先定义所有的appender-->
  <appenders>
    <!--这个输出控制台的配置-->
    <console name="console" target="system_out">
      <thresholdfilter level="debug" />
      <!--输出日志的格式-->
      <patternlayout pattern="${log_pattern}" charset="utf-8"/>
    </console>
    <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用-->
    <!--<file append="false" filename="log/test.log" name="log">-->
    <!--<patternlayout pattern="${log_pattern}" charset="utf-8"/>-->
    <!--</file>-->
    <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，
    则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->

    <!-- ${env:myapp_home}  -->
    <rollingfile filename="${file_pattern}/info.log" filepattern="${file_pattern}/info-%d{yyyy-MM-dd}.log"
                 name="rollingfileinfo">
      <filters>
        <!--控制台只输出level及以上级别的信息（onmatch），其他的直接拒绝（onmismatch）-->
        <thresholdfilter level="info" onmatch="accept" onmismatch="deny"/>
        <thresholdfilter level="warn" onmatch="deny" onmismatch="neutral"/>
      </filters>
      <patternlayout pattern="${log_pattern}" charset="utf-8"/>
      <policies>
        <timebasedtriggeringpolicy/>
        <sizebasedtriggeringpolicy size="100mb"/>
      </policies>
    </rollingfile>

    <rollingfile filename="${file_pattern}/warn.log" filepattern="${file_pattern}/warn-%d{yyyy-MM-dd}.log"
                 name="rollingfilewarn">
      <filters>
        <thresholdfilter level="warn" onmatch="accept" onmismatch="deny"/>
        <thresholdfilter level="error" onmatch="deny" onmismatch="neutral"/>
      </filters>
      <patternlayout pattern="${log_pattern}" charset="utf-8"/>
      <policies>
        <timebasedtriggeringpolicy/>
        <sizebasedtriggeringpolicy size="100 mb"/>
      </policies>
      <!-- defaultrolloverstrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
      <defaultrolloverstrategy max="20"/>
    </rollingfile>

    <rollingfile filename="${file_pattern}/error.log" filepattern="${file_pattern}/error-%d{yyyy-MM-dd}.log"
                 name="rollingfileerror">
      <thresholdfilter level="error"/>
      <patternlayout pattern="${log_pattern}" charset="utf-8"/>
      <policies>
        <timebasedtriggeringpolicy/>
        <sizebasedtriggeringpolicy size="100 mb"/>
      </policies>
    </rollingfile>


    <rollingfile filename="${file_pattern}/debug.log" filepattern="${file_pattern}/debug-%d{yyyy-MM-dd}.log"
                 name="rollingfileerror">
      <thresholdfilter level="debug"/>
      <patternlayout pattern="${log_pattern}" charset="utf-8"/>
      <policies>
        <timebasedtriggeringpolicy/>
        <sizebasedtriggeringpolicy size="100 mb"/>
      </policies>
    </rollingfile>

    <rollingfile filename="${file_pattern_path}/${server_name}request_record.log" filepattern="${file_pattern}/request_record.log.%d{yyyy-MM-dd}.gz"
                 name="request_record">
      <thresholdfilter level="info"/>
      <patternlayout pattern="${request_log_pattern}" charset="utf-8"/>
      <policies>
        <timebasedtriggeringpolicy/>
        <DefaultRolloverStrategy>
          <Delete basePath="${file_pattern_path}" maxDepth="2">
            <IfFileName glob="request_record.log.*.gz"/>
            <IfLastModified age="30d"/>
          </Delete>
        </DefaultRolloverStrategy>
      </policies>
    </rollingfile>


  </appenders>
  <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
  <loggers>
    <!--过滤掉spring和hibernate的一些无用的debug信息-->
    <!--<logger level="info" name="org.springframework">-->
    <!--</logger>-->
    <logger level="info" name="com.baomidou.mybatisplus"> </logger>
    <logger level="error" name="springfox.documentation"> </logger>
    <logger level="info" name="com.zaxxer.hikari"> </logger>
    <logger level="info" name="org.hibernate.validator"> </logger>
    <logger level="info" name="org.springframework"> </logger>
    <logger level="all" name="org.springframework.cloud.sleuth.instrument.reactor"></logger>

    <logger level="all" name="com.github.kristofa.brave.mysql"></logger>
    <logger level="debug" name="com.sf"></logger> <!--需要修改成com.sf -->
    <logger level="warn" name="org.apache.commons.httpclient"></logger>

    <logger level="info" name="request" additivity="false" >
      <appender-ref ref="request_record"></appender-ref>
    </logger>

    <root level="debug">
      <appender-ref ref="console"/>
      <appender-ref ref="rollingfileinfo"/>
      <appender-ref ref="rollingfilewarn"/>
      <appender-ref ref="rollingfileerror"/>
    </root>
  </loggers>

</configuration>
